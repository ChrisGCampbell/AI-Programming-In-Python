1
00:00:00,533 --> 00:00:03,164
ESTRUTURAS DE DADOS
MÉTODOS DE LISTAS - PARTE 2

2
00:00:03,197 --> 00:00:06,475
Apresentarei um novo método string
que funciona com as listas,

3
00:00:06,517 --> 00:00:07,804
o join().

4
00:00:07,846 --> 00:00:10,035
Ele pega uma lista
como argumento

5
00:00:10,077 --> 00:00:13,036
e retorna uma string
com os elementos da lista

6
00:00:13,078 --> 00:00:15,283
unidos por uma string
de separação.

7
00:00:15,325 --> 00:00:20,146
Neste exemplo, usamos a string \n
como separador,

8
00:00:20,188 --> 00:00:23,108
então haverá uma nova linha
entre cada elemento:

9
00:00:23,150 --> 00:00:26,498
fore, nova linha,
aft, nova linha,

10
00:00:26,540 --> 00:00:29,443
starboard, nova linha, port.

11
00:00:29,485 --> 00:00:33,010
Também podemos usar outras strings
como separadores com o join().

12
00:00:33,052 --> 00:00:35,076
Aqui usamos um hífen.

13
00:00:35,118 --> 00:00:38,260
É importante separar
cada um dos itens

14
00:00:38,302 --> 00:00:41,074
da lista que estamos unindo
com uma vírgula.

15
00:00:41,116 --> 00:00:43,866
Esquecer isso
não gerará um erro,

16
00:00:43,908 --> 00:00:46,825
mas teremos
resultados inesperados.

17
00:00:46,867 --> 00:00:51,700
Neste exemplo, omitir a vírgula
entre García e O'Kelly

18
00:00:51,742 --> 00:00:53,639
teve este resultado.

19
00:00:53,681 --> 00:00:56,575
Perceba como o separador hífen
está faltando

20
00:00:56,617 --> 00:00:58,592
entre García e O'Kelly.

21
00:00:58,634 --> 00:01:01,864
Nesse caso, as duas strings
foram unidas.

22
00:01:01,906 --> 00:01:06,704
Isso acontece graças ao padrão
de anexação de strings do Python.

23
00:01:06,746 --> 00:01:09,728
Se join() retornar um resultado
que não seja o esperado,

24
00:01:09,770 --> 00:01:11,400
confira as vírgulas.

25
00:01:12,337 --> 00:01:15,143
Perceba que join()
gerará um erro

26
00:01:15,185 --> 00:01:18,367
se tentarmos unir qualquer coisa
além de strings.

27
00:01:18,409 --> 00:01:22,657
Obtivemos um erro aqui porque
um inteiro foi incluído à lista.

28
00:01:23,544 --> 00:01:26,224
Por fim,
um método útil chamado "append"

29
00:01:26,266 --> 00:01:29,056
adicionará um elemento
ao fim da lista.

30
00:01:29,098 --> 00:01:31,495
A seguir, continuaremos
vendo as listas,

31
00:01:31,537 --> 00:01:33,225
explorando
mais métodos de lista.

