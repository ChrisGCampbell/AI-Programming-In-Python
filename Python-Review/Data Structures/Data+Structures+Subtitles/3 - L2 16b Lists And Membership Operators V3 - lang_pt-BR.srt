1
00:00:01,139 --> 00:00:03,801
LISTAS E OPERADORES DE ASSOCIAÇÃO -
PARTE 2

2
00:00:03,834 --> 00:00:07,467
Além de acessar
elementos individuais em uma lista,

3
00:00:07,500 --> 00:00:10,001
podemos utilizar a notação
de fatiamento do Python

4
00:00:10,033 --> 00:00:12,634
para acessar uma subsequência
de uma lista.

5
00:00:12,667 --> 00:00:17,267
Isso significa utilizar índices
para "fatiar" partes de um objeto,

6
00:00:17,300 --> 00:00:19,434
como uma string ou uma lista.

7
00:00:19,467 --> 00:00:22,000
Um exemplo
deixa isso bem claro.

8
00:00:22,033 --> 00:00:24,734
Veja esta lista de meses.

9
00:00:25,767 --> 00:00:30,701
Podemos fatiar o terceiro trimestre
do ano desta forma.

10
00:00:30,734 --> 00:00:33,801
O índice à esquerda
dos dois pontos, 6,

11
00:00:33,834 --> 00:00:35,901
é onde o fatiamento começa.

12
00:00:35,934 --> 00:00:39,701
Ele continua
até o segundo índice, 9.

13
00:00:39,734 --> 00:00:42,934
Perceba que 6
é o índice de "July",

14
00:00:42,968 --> 00:00:45,834
mas 9 é o índice de "October".

15
00:00:45,867 --> 00:00:48,000
O limite inferior é inclusivo,

16
00:00:48,033 --> 00:00:51,067
mas o superior é exclusivo.

17
00:00:51,100 --> 00:00:53,300
Existem alguns atalhos
de fatiamento

18
00:00:53,333 --> 00:00:56,167
que simplificam
situações comuns.

19
00:00:56,200 --> 00:01:00,767
Se desejarmos fatiar algo
que comece no início da lista,

20
00:01:00,800 --> 00:01:03,701
podemos omitir
o índice de início desta forma.

21
00:01:04,367 --> 00:01:09,434
Se desejarmos fatiar algo
até o fim da lista,

22
00:01:09,467 --> 00:01:12,901
podemos omitir
o índice final desta forma.

23
00:01:12,934 --> 00:01:17,167
"Lista" é um tipo, assim como
string, float e int.

24
00:01:17,200 --> 00:01:18,701
Dos tipos que vimos,

25
00:01:18,734 --> 00:01:21,901
as listas se parecem mais
com as strings.

26
00:01:21,934 --> 00:01:24,400
Ambas suportam a função len,

27
00:01:24,434 --> 00:01:27,234
a de indexação
e a de fatiamento.

28
00:01:27,267 --> 00:01:30,067
Vemos aqui que o comprimento
de uma string

29
00:01:30,100 --> 00:01:32,000
é o número de caracteres,

30
00:01:32,033 --> 00:01:36,067
e o da lista
é o número de elementos.

31
00:01:36,100 --> 00:01:38,734
A indexação a partir do zero
serve às duas,

32
00:01:38,767 --> 00:01:42,167
bem como o fatiamento
baseado nos índices.

33
00:01:42,200 --> 00:01:44,000
Outras coisas
que elas suportam

34
00:01:44,033 --> 00:01:47,434
são os operadores de associação
"in" e "not in".

35
00:01:47,467 --> 00:01:50,434
O "in" avalia
se o objeto à esquerda

36
00:01:50,467 --> 00:01:53,334
está incluso no objeto
à direita.

37
00:01:53,367 --> 00:01:56,601
O "not in" avalia
se o objeto à esquerda

38
00:01:56,634 --> 00:02:00,133
não está incluso
no objeto à direita.

39
00:02:00,166 --> 00:02:04,434
Aqui vemos se a string "her"
está nesta string,

40
00:02:04,467 --> 00:02:06,234
que está bem aqui.

41
00:02:06,267 --> 00:02:08,968
Porém, "Sunday"
não está na lista,

42
00:02:09,000 --> 00:02:10,701
pois ela só mostra os meses.

